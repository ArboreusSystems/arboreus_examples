cmake_minimum_required(VERSION 3.16)

set(A_NAME_TARGET Library_1_v3)
set(A_PREFIX A_${A_NAME_TARGET})

project(${A_NAME_TARGET} LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

option(A_OPTION_USING_PCH "${A_NAME_TARGET} using PCH support" ON)

set(${A_PREFIX}_DIR_ROOT ${CMAKE_CURRENT_SOURCE_DIR})

set(${A_PREFIX}_SOURCES_RESOURCES)
set(${A_PREFIX}_SOURCES_CPP_HEADERS)
set(${A_PREFIX}_SOURCES_CPP)
set(${A_PREFIX}_SOURCES_C_HEADERS)
set(${A_PREFIX}_SOURCES_C)
set(${A_PREFIX}_SOURCES_QML)
set(${A_PREFIX}_SOURCES_PRECOMPILED_HEADERS_PUBLIC)
set(${A_PREFIX}_SOURCES_PRECOMPILED_HEADERS_PRIVATE)

set(${A_PREFIX}_SOURCES_PRECOMPILED_HEADERS_PRIVATE
	${${A_PREFIX}_SOURCES_PRECOMPILED_HEADERS_PRIVATE}
	library_1_v3_pch.h
)

set(${A_PREFIX}_SOURCES_CPP_HEADERS
	${${A_PREFIX}_SOURCES_CPP_HEADERS}
	library_1_v3_global.h
	library_1_v3.h
)

set(${A_PREFIX}_SOURCE_CPP
	${${A_PREFIX}_SOURCE_CPP}
	library_1_v3.cpp
)

set(${A_PREFIX}_SOURCES
	${${A_PREFIX}_SOURCES}
	${${A_PREFIX}_SOURCE_CPP}
	${${A_PREFIX}_SOURCES_CPP_HEADERS}
	${${A_PREFIX}_SOURCES_PRECOMPILED_HEADERS_PRIVATE}
)

set(${A_PREFIX}_SOURCES_QML
	${${A_PREFIX}_SOURCES_QML}
	ATestQML1.qml
)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Core Quick)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Core Quick)

qt_add_library(${A_NAME_TARGET} STATIC
	${${A_PREFIX}_SOURCES}
)

qt_add_qml_module(${A_NAME_TARGET}
	URI ${A_NAME_TARGET}
	QML_FILES ${${A_PREFIX}_SOURCES_QML}
)

if(
	NOT "${${A_PREFIX}_SOURCES_PRECOMPILED_HEADERS_PRIVATE}" STREQUAL "" OR
	NOT "${${A_PREFIX}_SOURCES_PRECOMPILED_HEADERS_PUBLIC}" STREQUAL ""
)
	if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.16 AND A_OPTION_USING_PCH)
		message(STATUS "Using PCH for ${A_NAME_TARGET}")
		target_precompile_headers(${A_NAME_TARGET}
			PRIVATE ${${A_PREFIX}_SOURCES_PRECOMPILED_HEADERS_PRIVATE}
			PUBLIC ${${A_PREFIX}_SOURCES_PRECOMPILED_HEADERS_PUBLIC}
		)
		set(CMAKE_PCH_INSTANTIATE_TEMPLATES ON)
	else()
		message(STATUS "No PCH for ${A_NAME_TARGET}")
	endif()
else()
	message(STATUS "PCH list empty.")
endif()

target_link_libraries(${A_NAME_TARGET}
	PRIVATE
		Qt${QT_VERSION_MAJOR}::Core
		Qt${QT_VERSION_MAJOR}::Quick
)

target_compile_definitions(${A_NAME_TARGET}
	PRIVATE
		LIBRARY_1_V3_LIBRARY
)

target_include_directories(${A_NAME_TARGET}
	PUBLIC
		${${A_PREFIX}_DIR_ROOT}
)
